{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/tslib/tslib.es6.js","webpack:///src/app/interceptor/app-interceptor/app-interceptor.component.html","webpack:///src/app/interceptor/app-interceptor/app-interceptor.component.ts","webpack:///src/app/student-list/miscellaneous/miscellaneous-child1/miscellaneous-child1.component.ts","webpack:///src/app/student-list/miscellaneous/miscellaneous-child1/miscellaneous-child1.component.html","webpack:///src/app/student-list/miscellaneous/miscellaneous-child2/miscellaneous-child2.component.ts","webpack:///src/app/student-list/miscellaneous/miscellaneous-child2/miscellaneous-child2.component.html","webpack:///src/app/student-list/miscellaneous/miscellaneous-child3/miscellaneous-child3.component.ts","webpack:///src/app/student-list/miscellaneous/miscellaneous-child3/miscellaneous-child3.component.html","webpack:///src/app/student-list/miscellaneous/miscellaneous-child4/miscellaneous-child4.component.ts","webpack:///src/app/student-list/miscellaneous/miscellaneous-child4/miscellaneous-child4.component.html","webpack:///src/app/student-list/miscellaneous/student-miscellaneous.component.ts","webpack:///src/app/student-list/miscellaneous/student-miscellaneous.component.html","webpack:///src/app/student-list/student-details/student-details.component.ts","webpack:///src/app/student-list/student-details/student-details.component.html","webpack:///src/app/student-list/student-information/student-information.component.ts","webpack:///src/app/student-list/student-information/student-information.component.html","webpack:///src/app/student-list/student-list-routing.module.ts","webpack:///src/app/student-list/student-list.module.ts"],"names":["listenerOptions","passive","AutofillMonitor","_platform","_ngZone","_monitoredElements","Map","elementOrRef","isBrowser","element","info","get","subject","asObservable","result","cssClass","listener","event","animationName","classList","contains","add","run","next","target","isAutofilled","remove","runOutsideAngular","addEventListener","set","unlisten","removeEventListener","complete","forEach","_info","stopMonitoring","ɵfac","AutofillMonitor_Factory","t","ctorParameters","type","ɵprov","factory","token","providedIn","args","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","monitor","subscribe","emit","CdkAutofill_Factory","ɵdir","selectors","outputs","propDecorators","selector","CdkTextareaAutosize","document","_destroyed","_enabled","_previousMinRows","_document","_textareaElement","nativeElement","minHeight","minRows","_cachedLineHeight","style","maxHeight","maxRows","_initialHeight","height","resizeToFitContent","window","_getWindow","pipe","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","parentNode","appendChild","clientHeight","removeChild","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","value","_minRows","_previousValue","placeholderText","placeholder","scrollHeight","requestAnimationFrame","_scrollToCaretPosition","setTimeout","undefined","doc","_getDocument","defaultView","selectionStart","selectionEnd","isStopped","activeElement","setSelectionRange","_maxRows","reset","CdkTextareaAutosize_Factory","hostAttrs","hostBindings","CdkTextareaAutosize_HostBindings","rf","ctx","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","inputs","enabled","exportAs","decorators","host","TextFieldModule","ɵmod","ɵinj","TextFieldModule_Factory","imports","ngJitMode","declarations","exports","_c0","_c1","_c2","_c3","_c4","_c5","MatCardContent","MatCardContent_Factory","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","hostVars","MatCardActions_HostBindings","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","_animationMode","MatCard_Factory","ɵcmp","MatCard_HostBindings","ngContentSelectors","decls","vars","template","MatCard_Template","styles","encapsulation","changeDetection","String","None","OnPush","MatCardHeader","MatCardHeader_Factory","consts","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","_control","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","ctx_r4","empty","_shouldAlwaysFloat","color","appearance","_labelId","_hasLabel","id","hideRequiredMarker","required","disabled","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","nextUniqueId","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","Error","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MatFormFieldDefaultOptions","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_changeDetectorRef","labelOptions","_dir","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","control","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","markForCheck","ngControl","valueChanges","onStable","_prefixChildren","changes","_suffixChildren","_hintChildren","_processHints","_errorChildren","change","detectChanges","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","length","errorState","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","ids","_getDisplayedMessages","find","push","map","error","setDescribedByIds","labelEl","children","textContent","trim","_isAttachedToDOM","startWidth","gapWidth","container","startEls","querySelectorAll","gapEls","containerRect","getBoundingClientRect","width","containerStart","_getStartEnd","labelStart","labelWidth","child","offsetWidth","Math","abs","i","rect","right","left","getRootNode","rootNode","documentElement","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","contentQueries","MatFormField_ContentQueries","dirIndex","_t","first","viewQuery","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","features","provide","useExisting","MatFormField_Template","MatFormField_Template_div_click_1_listener","$event","onContainerClick","directives","data","animation","descendants","animations","providers","MatFormFieldModule","MatFormFieldModule_Factory","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","IconOptions","SvgIconConfig","options","nodeName","svgElement","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_defaultFontSetClass","addSvgIconInNamespace","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","sanitizedLiteral","sanitize","HTML","_createSvgElementForSingleIcon","addSvgIconSetInNamespace","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","_svgElementFromString","alias","className","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","name","key","iconKey","config","_getSvgFromConfig","iconSetConfigs","_getSvgFromIconSetConfigs","clear","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","filter","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","message","handleError","console","foundIcon","_extractSvgIconFromSet","_fetchUrl","svgText","responseText","_setSvgAttributes","iconSet","iconSource","querySelector","iconElement","removeAttribute","toLowerCase","_toSvgElement","str","div","createElement","innerHTML","attributes","setAttribute","childNodes","nodeType","ELEMENT_NODE","viewBox","inProgressFetch","req","responseType","configNamespace","MatIconRegistry_Factory","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","deps","useFactory","MatIconBase","_MatIconMixinBase","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","MatIconLocation","_location","location","getPathname","pathname","search","funcIriAttributes","ɵ0","attr","funcIriAttributeSelector","join","funcIriPattern","MatIcon","elementRef","_iconRegistry","ariaHidden","_inline","parts","split","svgIconChanges","svgIcon","_splitIconName","getNamedSvgIcon","_setSvgElement","previousValue","_clearSvgElement","_usingFontIcon","_updateFontIconClasses","cachedElements","_elementsWithExternalReferences","size","newPath","_previousPath","_prependPathToReferences","styleTags","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","elem","fontSetClass","fontSet","classNameForFontAlias","getDefaultFontSetClass","_previousFontSetClass","fontIcon","_previousFontIconClass","elements","attrs","elementsWithFuncIri","elementWithReference","getAttribute","match","inline","_fontSet","_cleanupFontValue","_fontIcon","MatIcon_Factory","MatIcon_HostBindings","MatIcon_Template","MatIconModule","MatIconModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","_MatInputMixinBase","MatInput","inputValueAccessor","ngZone","_uid","_isServer","_isNativeSelect","_disabled","_required","_type","_readonly","_neverEmptyInputTypes","has","_inputValueAccessor","_previousNativeValue","IOS","el","multiple","updateErrorState","_dirtyCheckNativeValue","focus","isFocused","readonly","newValue","indexOf","validity","badInput","_ariaDescribedby","_id","_validateType","_isTextarea","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","label","MatInput_Factory","MatInput_HostBindings","MatInput_focus_HostBindingHandler","_focusChanged","MatInput_blur_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","toString","errorStateMatcher","MatInputModule","MatInputModule_Factory","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","s","n","arguments","call","apply","__rest","e","getOwnPropertySymbols","propertyIsEnumerable","__decorate","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","rejected","done","then","__generator","body","_","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","__exportStar","m","__values","o","__read","ar","__spread","concat","__spreadArrays","il","k","a","j","jl","__await","__asyncGenerator","asyncIterator","q","resume","settle","fulfill","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","__importDefault","__classPrivateFieldGet","receiver","privateMap","__classPrivateFieldSet","AppInterceptorComponent","serviceService","loaderService","title","isLoading","loadingValue","getAllPostCall","log","hide","getAllPost","getAllDataUsingPromiseThen","getUsers","users","getUserPosts","posts","getPostComments","comments","comm","templateUrl","styleUrls","MiscellaneousChild1Component","interactionService","studentList$","greetingMessage","alert","sentMessage","MiscellaneousChild2Component","child2Variable","hashChild2Variable","MiscellaneousChild3Component","_customerName","customerName","MiscellaneousChild4Component","greetEvent","_parentToChild4Getter","childGreet","StudentMiscellaneousComponent","childRespMessage","child1Ref","viewChildMessage","clickToChild","clickToHello","clickToThanks","clickParentMethod","StudentDetailsComponent","router","studentSetvice","route","getUserList","userList","paramMap","param","selectedId","parseInt","navigate","student","moveBack","StudentInformationComponent","activatedRoute","studentId","relativeTo","previousId","nextId","goPrevious","goNext","nextToInterceptor","routes","component","StudentListRoutingModule","forChild","studentRoutingComponents","StudentListModule"],"mappings":"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","file":"student-list-student-list-module-es5.js","sourcesContent":["import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?=} document\n     */\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        /** @type {?} */\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    CdkTextareaAutosize.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Position of the actions inside the card.\n     * @type {?}\n     */\n    MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n * @type {?}\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { SecurityContext, Injectable, Optional, Inject, ErrorHandler, ɵɵdefineInjectable, ɵɵinject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { of, throwError, forkJoin } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/common/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * \\@docs-private\n * @param {?} literal HTML that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Options that can be used to configure how an icon or the icons in an icon set are presented.\n * @record\n */\nfunction IconOptions() { }\nif (false) {\n    /**\n     * View box to set on the icon.\n     * @type {?|undefined}\n     */\n    IconOptions.prototype.viewBox;\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nclass SvgIconConfig {\n    /**\n     * @param {?} data\n     * @param {?=} options\n     */\n    constructor(data, options) {\n        this.options = options;\n        // Note that we can't use `instanceof SVGElement` here,\n        // because it'll break during server-side rendering.\n        if (!!((/** @type {?} */ (data))).nodeName) {\n            this.svgElement = (/** @type {?} */ (data));\n        }\n        else {\n            this.url = (/** @type {?} */ (data));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    SvgIconConfig.prototype.url;\n    /** @type {?} */\n    SvgIconConfig.prototype.svgElement;\n    /** @type {?} */\n    SvgIconConfig.prototype.options;\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    /**\n     * @param {?} _httpClient\n     * @param {?} _sanitizer\n     * @param {?} document\n     * @param {?=} _errorHandler\n     */\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /**\n         * Cache for icons loaded by direct URLs.\n         */\n        this._cachedIconsByUrl = new Map();\n        /**\n         * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n         */\n        this._inProgressUrlFetches = new Map();\n        /**\n         * Map from font identifiers to their CSS class names. Used for icon fonts.\n         */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIcon(iconName, url, options) {\n        return (/** @type {?} */ (this)).addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._createSvgElementForSingleIcon(sanitizedLiteral, options);\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSet(url, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._svgElementFromString(sanitizedLiteral);\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {THIS}\n     */\n    registerFontClassAlias(alias, className = alias) {\n        (/** @type {?} */ (this))._fontCssClassesByAlias.set(alias, className);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} className\n     * @return {THIS}\n     */\n    setDefaultFontSetClass(className) {\n        (/** @type {?} */ (this))._defaultFontSetClass = className;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    getSvgIconFromUrl(safeUrl) {\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        /** @type {?} */\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => this._cachedIconsByUrl.set((/** @type {?} */ (url)), svg))), map((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => cloneSvg(svg))));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        /** @type {?} */\n        const key = iconKey(namespace, name);\n        /** @type {?} */\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        /** @type {?} */\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => config.svgElement = svg)), map((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => cloneSvg(svg))));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @private\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        /** @type {?} */\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        /** @type {?} */\n        const iconSetFetchRequests = iconSetConfigs\n            .filter((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => !iconSetConfig.svgElement))\n            .map((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((/**\n             * @param {?} err\n             * @return {?}\n             */\n            (err) => {\n                /** @type {?} */\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                /** @type {?} */\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                // @breaking-change 9.0.0 _errorHandler parameter to be made required\n                if (this._errorHandler) {\n                    this._errorHandler.handleError(new Error(errorMessage));\n                }\n                else {\n                    console.error(errorMessage);\n                }\n                return of(null);\n            })));\n        }));\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        })));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            const config = iconSetConfigs[i];\n            if (config.svgElement) {\n                /** @type {?} */\n                const foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchUrl(config.url)\n            .pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => this._createSvgElementForSingleIcon(svgText, config.options))));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconSetFromConfig(config) {\n        // If the SVG for this icon set has already been parsed, do nothing.\n        if (config.svgElement) {\n            return of(config.svgElement);\n        }\n        return this._fetchUrl(config.url).pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => {\n            // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n            // only needs to occur if the cache is yet unset.\n            if (!config.svgElement) {\n                config.svgElement = this._svgElementFromString(svgText);\n            }\n            return config.svgElement;\n        })));\n    }\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @private\n     * @param {?} responseText\n     * @param {?=} options\n     * @return {?}\n     */\n    _createSvgElementForSingleIcon(responseText, options) {\n        /** @type {?} */\n        const svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg, options);\n        return svg;\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @param {?=} options\n     * @return {?}\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        /** @type {?} */\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        /** @type {?} */\n        const iconElement = (/** @type {?} */ (iconSource.cloneNode(true)));\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes((/** @type {?} */ (iconElement)), options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    _svgElementFromString(str) {\n        /** @type {?} */\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        /** @type {?} */\n        const svg = (/** @type {?} */ (div.querySelector('svg')));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _toSvgElement(element) {\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        /** @type {?} */\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @private\n     * @param {?} svg\n     * @param {?=} options\n     * @return {?}\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @private\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    _fetchUrl(safeUrl) {\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        /** @type {?} */\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        /** @type {?} */\n        const req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize((/**\n         * @return {?}\n         */\n        () => this._inProgressUrlFetches.delete(url))), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        (/** @type {?} */ (this))._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        /** @type {?} */\n        const configNamespace = (/** @type {?} */ (this))._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            (/** @type {?} */ (this))._iconSetConfigs.set(namespace, [config]);\n        }\n        return (/** @type {?} */ (this));\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler, 8)); };\n/** @nocollapse */\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\n/** @nocollapse */ MatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler, 8)); }, token: MatIconRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._document;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._svgIconConfigs;\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._iconSetConfigs;\n    /**\n     * Cache for icons loaded by direct URLs.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._cachedIconsByUrl;\n    /**\n     * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._inProgressUrlFetches;\n    /**\n     * Map from font identifiers to their CSS class names. Used for icon fonts.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._fontCssClassesByAlias;\n    /**\n     * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n     * The default 'material-icons' value assumes that the material icon font has been loaded as\n     * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._defaultFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._httpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._sanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._errorHandler;\n}\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @param {?=} document\n * @param {?=} errorHandler\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, document, errorHandler) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        [new Optional(), ErrorHandler],\n        [new Optional(), (/** @type {?} */ (DOCUMENT))],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (/** @type {?} */ (svg.cloneNode(true)));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatIcon.\n/**\n * \\@docs-private\n */\nclass MatIconBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatIconBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/**\n * Stubbed out location for `MatIcon`.\n * \\@docs-private\n * @record\n */\nfunction MatIconLocation() { }\nif (false) {\n    /** @type {?} */\n    MatIconLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * SVG attributes that accept a FuncIRI (e.g. `url(<something>)`).\n * @type {?}\n */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = /**\n * @param {?} attr\n * @return {?}\n */\nattr => `[${attr}]`;\n/**\n * Selector that can be used to find all elements that are using a `FuncIRI`.\n * @type {?}\n */\nconst funcIriAttributeSelector = funcIriAttributes.map((ɵ0)).join(', ');\n/**\n * Regex that can be used to extract the id out of a FuncIRI.\n * @type {?}\n */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _iconRegistry\n     * @param {?} ariaHidden\n     * @param {?=} _location\n     * @param {?=} _errorHandler\n     */\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     * @return {?}\n     */\n    get inline() {\n        return this._inline;\n    }\n    /**\n     * @param {?} inline\n     * @return {?}\n     */\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /**\n     * Font set that the icon is a part of.\n     * @return {?}\n     */\n    get fontSet() { return this._fontSet; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontSet(value) {\n        this._fontSet = this._cleanupFontValue(value);\n    }\n    /**\n     * Name of an icon within a font set.\n     * @return {?}\n     */\n    get fontIcon() { return this._fontIcon; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontIcon(value) {\n        this._fontIcon = this._cleanupFontValue(value);\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @private\n     * @param {?} iconName\n     * @return {?}\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        /** @type {?} */\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return (/** @type {?} */ (parts));\n            default: throw Error(`Invalid icon name: \"${iconName}\"`);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        /** @type {?} */\n        const svgIconChanges = changes['svgIcon'];\n        if (svgIconChanges) {\n            if (this.svgIcon) {\n                const [namespace, iconName] = this._splitIconName(this.svgIcon);\n                this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(take(1))\n                    .subscribe((/**\n                 * @param {?} svg\n                 * @return {?}\n                 */\n                svg => this._setSvgElement(svg)), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    /** @type {?} */\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    // @breaking-change 9.0.0 _errorHandler parameter to be made required.\n                    if (this._errorHandler) {\n                        this._errorHandler.handleError(new Error(errorMessage));\n                    }\n                    else {\n                        console.error(errorMessage);\n                    }\n                }));\n            }\n            else if (svgIconChanges.previousValue) {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        /** @type {?} */\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && this._location && cachedElements.size) {\n            /** @type {?} */\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    /**\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        /** @type {?} */\n        const styleTags = (/** @type {?} */ (svg.querySelectorAll('style')));\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        if (this._location) {\n            /** @type {?} */\n            const path = this._location.getPathname();\n            this._previousPath = path;\n            this._cacheChildrenWithExternalReferences(svg);\n            this._prependPathToReferences(path);\n        }\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _clearSvgElement() {\n        /** @type {?} */\n        const layoutElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            /** @type {?} */\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        /** @type {?} */\n        const elem = this._elementRef.nativeElement;\n        /** @type {?} */\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     * @private\n     * @param {?} path\n     * @return {?}\n     */\n    _prependPathToReferences(path) {\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((/**\n             * @param {?} attrs\n             * @param {?} element\n             * @return {?}\n             */\n            (attrs, element) => {\n                attrs.forEach((/**\n                 * @param {?} attr\n                 * @return {?}\n                 */\n                attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                }));\n            }));\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        /** @type {?} */\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach((/**\n             * @param {?} attr\n             * @return {?}\n             */\n            attr => {\n                /** @type {?} */\n                const elementWithReference = elementsWithFuncIri[i];\n                /** @type {?} */\n                const value = elementWithReference.getAttribute(attr);\n                /** @type {?} */\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    /** @type {?} */\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    (/** @type {?} */ (attributes)).push({ name: attr, value: match[1] });\n                }\n            }));\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler, 8)); };\nMatIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 4, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", fontSet: \"fontSet\", fontIcon: \"fontIcon\", svgIcon: \"svgIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, { inline: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatIcon.ngAcceptInputType_inline;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._inline;\n    /**\n     * Name of the icon in the SVG icon set.\n     * @type {?}\n     */\n    MatIcon.prototype.svgIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontSet;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontIconClass;\n    /**\n     * Keeps track of the current page path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousPath;\n    /**\n     * Keeps track of the elements and attributes that we've prefixed with the current path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._elementsWithExternalReferences;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._iconRegistry;\n    /**\n     * @deprecated `location` parameter to be made required.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._location;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._errorHandler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatIconModule {\n}\nMatIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatIconModule_Factory(t) { return new (t || MatIconModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n\n//# sourceMappingURL=icon.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    _isTextarea() {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","<div class=\"example-button-row\">\n  <button routerLink=\"../student-miscellaneous\" mat-raised-button color=\"primary\" style=\"align-items: flex-end;\">Next Concept</button>\n</div>\n<h1 style=\"color:cornflowerblue;\">Exception Handler & Interceptor</h1>\n<h3 style=\"color:crimson;\">{{errorMessage}}</h3>\n<h3 style=\"color:cornflowerblue;\">{{loadingValue}}</h3>\n\n<div class=\"text-center mt-4\">\n    <h4>User Information</h4>\n    <div class=\"container mt-4\">\n      <table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <td scope=\"col\">ID</td>\n            <td scope=\"col\">Name</td>\n            <th scope=\"col\">Email</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor='let dt of users'>\n            <td>{{ dt.id }}</td>\n            <td>{{ dt.name }}</td>\n            <td>{{ dt.email }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n   \n  </div>\n\n  <div class=\"text-center mt-4\">\n    <h4>Post Information</h4>\n    <div class=\"container mt-4\">\n      <table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <td scope=\"col\">User Id</td>\n            <td scope=\"col\">Id</td>\n            <th scope=\"col\">Title</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor='let dt of posts'>\n            <td>{{ dt.userId }}</td>\n            <td>{{ dt.id }}</td>\n            <td>{{ dt.title }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n   \n  </div>\n\n  <div class=\"text-center mt-4\">\n    <h4>Comment Information</h4>\n    <div class=\"container mt-4\">\n      <table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <td scope=\"col\">Post Id</td>\n            <td scope=\"col\">ID</td>\n            <td scope=\"col\">Name</td>\n            <th scope=\"col\">Email</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor='let dt of comments'>\n            <td>{{ dt.postId }}</td>\n            <td>{{ dt.id }}</td>\n            <td>{{ dt.name }}</td>\n            <td>{{ dt.email }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from 'src/app/service/student.service';\nimport { Subject } from 'rxjs';\nimport { AppLoaderService } from '../app-loader.service';\nimport { User } from 'src/app/model/user';\nimport { Posts } from 'src/app/model/posts';\nimport { Comments } from 'src/app/model/comments';\n\n@Component({\n  selector: 'app-app-interceptor',\n  templateUrl: './app-interceptor.component.html',\n  styleUrls: ['./app-interceptor.component.css']\n})\nexport class AppInterceptorComponent implements OnInit {\n\n  errorMessage: string;\n  loadingValue: String;\n  users: User;\n  posts: Posts;\n  comments: Comments;\n\n  constructor(private serviceService: StudentService,\n    private loaderService: AppLoaderService) { }\n  title = 'my-http-interceptor';\n  isLoading: Subject<String>;\n\n  ngOnInit() {\n    this.loaderService.isLoading.subscribe(\n      data => this.loadingValue = data\n    );\n    this.serviceService.getAllPostCall().subscribe(\n      data => console.log(data),\n      error => {\n        this.loaderService.hide()\n        this.errorMessage = error.message\n        console.log(error)\n      }\n    )\n\n    this.serviceService.getAllPost().subscribe(\n      data => console.log(data),\n      error => {\n        this.errorMessage = error.message\n        console.log(error)\n      }\n    )\n    this.getAllDataUsingPromiseThen()\n  }\n\n  //USing async and await to manage async call sequencely\n  async getAllData() {\n    const users = await this.serviceService.getUsers();\n    this.users = users;\n    const posts = await this.serviceService.getUserPosts(users[0].id);\n    this.posts = posts;\n    const comments = await this.serviceService.getPostComments(posts[0].id);\n\n    this.comments = comments;\n    console.log(users);\n    console.log(posts);\n    console.log(comments);\n  }\n\n\n  //USing Promise Then manage async call sequencely\n  //https://stackoverflow.com/questions/52115904/how-to-call-a-function-after-the-termination-of-another-function-in-angular/52116063\n  getAllDataUsingPromiseThen() {\n\n    this.serviceService.getUsers().then(users => {\n      this.users = users\n      this.serviceService.getUserPosts(users[0].id).then(posts => {\n        this.posts = posts;\n        this.serviceService.getPostComments(posts[0].id).then(comm => {\n          this.comments = comm;\n        });\n      })\n    }).catch(error => {\n      this.loaderService.hide()\n      this.errorMessage=error.message\n    })\n\n\n\n    /* const users = await this.serviceService.getUsers();\n     this.users = JSON.stringify(users);\n     const posts = await this.serviceService.getUserPosts(users[0].id);\n     this.posts =JSON.stringify(posts);\n     const comments = await this.serviceService.getPostComments(posts[0].id);*/\n\n\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { InteractionService } from 'src/app/service/interaction.service';\n\n@Component({\n  selector: 'app-miscellaneous-child1',\n  templateUrl: './miscellaneous-child1.component.html',\n  styleUrls: ['./miscellaneous-child1.component.css']\n})\nexport class MiscellaneousChild1Component implements OnInit {\n\n  greetingMessage: string;\n  constructor(private interactionService : InteractionService) { }\n  viewChildMessage : String; //Value is comming from Parent using @ViewChild() decorator\n  ngOnInit(): void {\n    this.interactionService.studentList$.subscribe(\n      message => {\n        if(message == 'Good Morning Child'){\n          this.greetingMessage = message + \"-1\";\n          alert(message)\n          this.interactionService.sentMessage('Good Morning Friend')\n        }\n        if(message == 'Thanks Child'){\n          this.greetingMessage = message + \"-1\";\n          alert(message)\n          this.interactionService.sentMessage('Welcome Friend')\n        }\n      }\n    )\n  }\n\n \n\n}\n","<div>Child -1</div>\n<h2>{{viewChildMessage}}</h2>\n<h2 class=\"child1\">{{greetingMessage}}</h2>\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-miscellaneous-child2',\n  templateUrl: './miscellaneous-child2.component.html',\n  styleUrls: ['./miscellaneous-child2.component.css']\n})\nexport class MiscellaneousChild2Component implements OnInit {\n\n  child2Variable :string = \"Child -2\"\n  hashChild2Variable: String;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  great(){\n    this.hashChild2Variable = 'Click Even with Template Reference'\n  }\n\n}\n","<div>Child -2</div>\n<mat-card>\n\n    <div class=\"child2\">{{child2Variable}}</div>\n    <div class=\"child2hash\">{{hashChild2Variable}}</div>\n   \n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-miscellaneous-child3',\n  templateUrl: './miscellaneous-child3.component.html',\n  styleUrls: ['./miscellaneous-child3.component.css']\n})\nexport class MiscellaneousChild3Component implements OnInit {\n\n  constructor() { }\n\n  name :string;\n  private _customerName: string;\n\n  ngOnInit(): void {\n\n  }\n  get customerName() :string{\n    return this._customerName;\n  }\n\n  set customerName(customerName :string){\n    this._customerName =customerName;\n  }\n}\n","<p>Child3</p>\n\n<mat-card>\n    <mat-form-field class=\"example-form-field\">\n        <mat-label>Two Way Binding</mat-label>\n        <input matInput type=\"text\" [(ngModel)]=\"name\">\n        <button mat-button *ngIf=\"name\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"name=''\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-form-field>\n    <mat-form-field class=\"example-form-field\">\n        <mat-label>Two Way Binding with Getter-Setter</mat-label>\n        <input matInput type=\"text\" [(ngModel)]=\"customerName\">\n        <button mat-button *ngIf=\"customerName\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"customerName=''\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-form-field>\n    <p>Welcome !! {{name}} {{customerName}}</p>\n</mat-card>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'app-miscellaneous-child4',\n  templateUrl: './miscellaneous-child4.component.html',\n  styleUrls: ['./miscellaneous-child4.component.css']\n})\nexport class MiscellaneousChild4Component implements OnInit {\n\n  constructor() { }\n\n  @Input('parentDataToChild4') parentToChild4: String;\n  private _parentToChild4Getter :String;\n  @Output() greetEvent = new EventEmitter();\n\n  ngOnInit(): void {\n  }\n\n  get parentToChild4Getter() :String {\n    return this._parentToChild4Getter;\n  }\n\n  @Input()\n  set parentToChild4Getter (value :String){\n    this._parentToChild4Getter = value\n  }\n\n  childGreet(){\n    this.greetEvent.emit('Value from Child component -4');\n  }\n}\n","<p>Child4</p>\n{{parentToChild4}}\n<br/>\n<div style=\"border: 1px solid;\">\n    {{parentToChild4Getter}}\n</div>\n<br/>\n<br/>\n\n<button mat-raised-button color=\"primary\" (click)= \"childGreet()\" >@Output() Button</button>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { InteractionService } from 'src/app/service/interaction.service';\nimport { MiscellaneousChild1Component } from './miscellaneous-child1/miscellaneous-child1.component';\n\n@Component({\n  selector: 'app-student-miscellaneous',\n  templateUrl: './student-miscellaneous.component.html',\n  styleUrls: ['./student-miscellaneous.component.css']\n})\nexport class StudentMiscellaneousComponent implements OnInit {\n\n  public childRespMessage: String;\n  public inputDataTo4Child: string;\n  @ViewChild(MiscellaneousChild1Component) child1Ref :MiscellaneousChild1Component;\n\n  constructor(private interactionService : InteractionService) { }\n\n  ngOnInit(): void {\n    this.interactionService.studentList$.subscribe(\n      message => this.childRespMessage = message\n    )\n  }\n\n  clickToHello(){\n    this.interactionService.sentMessage('Good Morning Child')\n  }\n\n  clickToThanks(){\n    this.interactionService.sentMessage('Thanks Child')\n  }\n\n  clickToChild(){\n    this.child1Ref.viewChildMessage = '@ViewChild() - Concept'\n  }\n\n  clickParentMethod(message :String){\n    //alert(message)\n    this.childRespMessage = message\n  }\n}\n","<div class=\"container\">\n\n    <header>\n        <div class=\"logo\">Parent Component\n            <button mat-raised-button color=\"primary\"  (click)=\"clickToChild()\" >@ViewChild Button</button>\n            <button mat-raised-button color=\"primary\"  (click)=\"clickToHello()\" >Say Hello to Child-1</button>\n            <button mat-raised-button color=\"accent\" (click)=\"clickToThanks()\">Say Thanks to Child-1</button>\n            \n        </div>\n        <div class=\"menu\">{{childRespMessage}}</div>\n        <div class=\"child2\" style=\"padding-top: 80px;\">Parent to read this value using #child --- {{child2.child2Variable}}</div>\n        <button mat-raised-button color=\"accent\" (click)=\"child2.great()\"><span>Template  Ref concept using #</span></button>\n        <mat-form-field class=\"example-form-field\" style=\"margin-left: 200px;\">\n            <mat-label>Parent to Child-4 - @Input Decorator</mat-label>\n            <input matInput type=\"text\" [(ngModel)]=\"inputDataTo4Child\">\n            <button mat-button *ngIf=\"inputDataTo4Child\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"inputDataTo4Child=''\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-form-field>\n       \n    </header>\n\n    <div class=\"first-box\">\n        <app-miscellaneous-child1></app-miscellaneous-child1>\n    </div>\n\n    <div class=\"second-box\">\n        <app-miscellaneous-child2 #child2></app-miscellaneous-child2>\n    </div>\n\n    <div class=\"third-box\">\n        <app-miscellaneous-child3></app-miscellaneous-child3>\n    </div>\n\n    <div class=\"fourth-box\">\n        <app-miscellaneous-child4 [parentDataToChild4]=\"inputDataTo4Child\"\n           [parentToChild4Getter]= \"inputDataTo4Child\" (greetEvent) = \"clickParentMethod($event)\"></app-miscellaneous-child4>\n    </div>\n\n    <footer>\n        <div>Website Info</div>\n    </footer>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { StudentService } from '../../service/student.service';\nimport { Student } from '../../model/student';\nimport { User } from 'src/app/model/user';\n\n@Component({\n  selector: 'app-student-details',\n  templateUrl: './student-details.component.html',\n  styleUrls: ['./student-details.component.css']\n})\nexport class StudentDetailsComponent implements OnInit {\n\n  public studentList: any;\n  public userList: any;\n  public selectedId;\n  constructor(private router: Router,\n            private studentSetvice : StudentService,\n            private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.studentSetvice.getUserList().subscribe(\n      data => {\n        this.userList = data;\n      }\n    )\n\n    /*this.studentSetvice.getStudentList().subscribe(data => {\n      this.studentList = data;\n    })*/\n\n    this.route.paramMap.subscribe((param: ParamMap) => {\n      this.selectedId = parseInt(param.get('id'));\n    });\n  }\n\n  moveBack() :void{\n    this.router.navigate(['/view-student'])\n  }\n\n  moveToStudentInfo(student :User) :void{\n    this.router.navigate(['/student/student-details',student.id])\n    //this.router.navigate([student.student_id],{relativeTo:this.route});\n  }\n\n  isSelected(student: User): boolean{\n    console.log('this.selectedId-' + this.selectedId)\n    console.log('student.student_id-' + student.id)\n    return this.selectedId ===student.id\n  }\n}\n","<h1 style=\"color:cornflowerblue;\">Route And Navigation</h1>\n<div>\n    <ul class=\"items\">\n        <li *ngFor =\"let student of userList\" >\n            <span (click) =\"moveToStudentInfo(student)\" [class.selected] =\"isSelected(student)\"  class=\"btn student-info\">{{student.id}} - {{student.name}}</span> \n        </li>\n    </ul>\n</div>\n<div style=\"align-items: center;\">  \n    <button type=\"submit\" class=\"btn btn-success\" (click) =\"moveBack()\">Back</button>  \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-student-information',\n  templateUrl: './student-information.component.html',\n  styleUrls: ['./student-information.component.css']\n})\nexport class StudentInformationComponent implements OnInit {\n\n  public studentId;\n  constructor(private router: Router,\n              private activatedRoute : ActivatedRoute) { }\n\n  ngOnInit(): void {\n    //let id = parseInt(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.activatedRoute.paramMap\n                  .subscribe((param :ParamMap)=> {\n                    let id = parseInt(param.get('id'))\n                    this.studentId =id;\n                  });\n    \n  }\n\n  moveBack() :void{\n    let selectedId = this.studentId;\n    //this.router.navigate(['student-details',{id: selectedId}]);\n    this.router.navigate(['../',{id: selectedId}], {relativeTo:this.activatedRoute});\n  }\n\n  goPrevious(): void{\n    let previousId = this.studentId -1; \n    this.router.navigate(['student/student-details', previousId])\n  }\n\n  goNext(): void{\n    let nextId = this.studentId +1;\n    this.router.navigate(['student/student-details', nextId])\n  }\n\n  nextToInterceptor() : void{\n    this.router.navigate(['../../interceptor'], {relativeTo: this.activatedRoute})\n  }\n}\n","\n<h3 style=\"color:darkcyan;\"> You have selected student whose id is \n  <span style=\"color:deeppink;\">{{studentId}}</span></h3>\n\n<div style=\"border: teal 2px solid;\">\n  <h3>Param Map Observable in Router</h3>\n  <br />\n  <div style=\"align-items: center;\">\n    <button type=\"submit\" (click)=\"goPrevious()\">Previous</button>\n    <button type=\"submit\" (click)=\"goNext()\">Next</button>\n  </div>\n</div>\n<br/>\n\n<div style=\"align-items: center;\">  \n    <button type=\"submit\" class=\"btn btn-success\" (click) =\"moveBack()\">Back</button>  \n    <button type=\"submit\" class=\"btn btn-success\" (click) =\"nextToInterceptor()\">Next To Loading & Interceptor</button>  \n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentDetailsComponent } from './student-details/student-details.component';\nimport { StudentInformationComponent } from './student-information/student-information.component';\nimport { AppInterceptorComponent } from '../interceptor/app-interceptor/app-interceptor.component';\nimport { StudentMiscellaneousComponent } from './miscellaneous/student-miscellaneous.component';\nimport { MiscellaneousChild1Component } from './miscellaneous/miscellaneous-child1/miscellaneous-child1.component';\nimport { MiscellaneousChild2Component } from './miscellaneous/miscellaneous-child2/miscellaneous-child2.component';\n\n\nconst routes: Routes = [\n  {path: 'student-details', component: StudentDetailsComponent},\n  {path: 'student-details/:id' , component: StudentInformationComponent},\n  {path:'interceptor', component: AppInterceptorComponent},\n  {path:'student-miscellaneous', component: StudentMiscellaneousComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StudentListRoutingModule { }\n\nexport const studentRoutingComponents =[\n  StudentDetailsComponent,\n  StudentInformationComponent,\n  AppInterceptorComponent,\n  StudentInformationComponent,\n  StudentMiscellaneousComponent,\n  MiscellaneousChild1Component,\n  MiscellaneousChild2Component\n]\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatButtonModule} from '@angular/material/button';\nimport { StudentListRoutingModule, studentRoutingComponents } from './student-list-routing.module';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport { FormsModule } from '@angular/forms';\nimport { MiscellaneousChild3Component } from './miscellaneous/miscellaneous-child3/miscellaneous-child3.component';\nimport { MiscellaneousChild4Component } from './miscellaneous/miscellaneous-child4/miscellaneous-child4.component';\n\n@NgModule({\n  declarations: [\n    studentRoutingComponents,\n    MiscellaneousChild3Component,\n    MiscellaneousChild4Component\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    StudentListRoutingModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatIconModule\n\n  ]\n})\nexport class StudentListModule { }\n"]}