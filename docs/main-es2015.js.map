{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-student/add-student.component.ts","./src/app/add-student/add-student.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/interceptor/app-interceptor.service.ts","./src/app/core/interceptor/index.ts","./src/app/core/model/student.ts","./src/app/core/model/user.ts","./src/app/core/service/app-loader.service.ts","./src/app/core/service/index.ts","./src/app/core/service/interaction.service.ts","./src/app/core/service/student.service.ts","./src/app/shared/components/confirmok/confirmok.component.ts","./src/app/shared/components/confirmok/confirmok.component.html","./src/app/shared/components/confirmok/data/modal-service.ts","./src/app/shared/components/confirmok/index.ts","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/components/header/index.ts","./src/app/shared/shared.module.ts","./src/app/student-list/student-list.component.ts","./src/app/student-list/student-list.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from '../core/service/student.service';\nimport { Student } from '../core/model/student';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { User } from '../core/model/user';\nimport { InteractionService } from '../core/service/interaction.service';\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css']\n})\nexport class AddStudentComponent implements OnInit {\n\n  headerVal: string = 'Add User'\n  student: User = new User();\n  public submitted: boolean = false;\n  newUser = new User();\n\n  constructor(private studentService: StudentService,\n    private interactionService: InteractionService) {\n\n  }\n\n  ngOnInit(): void {\n    this.submitted = false;\n  }\n\n  studentsaveform = new FormGroup({\n    student_name: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    student_email: new FormControl('', [Validators.required, Validators.email]),\n  });\n\n  saveStudent() {\n    this.student = new User();\n    this.student.name = this.StudentName.value;\n    this.student.email = this.StudentEmail.value;\n    this.submitted = true;\n    this.interactionService._user = this.student;\n    this.interactionService.addUsers(this.student)\n    this.save();\n  }\n\n  save() {\n    this.studentService.createStudent(this.student).subscribe(\n      data => console.log(data),\n      error => console.log(error)\n    );\n    this.student = new User();\n  }\n\n  get StudentName() {\n    return this.studentsaveform.get('student_name');\n  }\n\n  get StudentEmail() {\n    return this.studentsaveform.get('student_email');\n  }\n\n}\n","<app-header [headerValue]=\"headerVal\"></app-header>\n<div class=\"row\">\n  <div class=\"col-sm-4\"></div>\n  <div class=\"col-sm-4\">\n    <div [hidden]=\"submitted\" style=\"width: 400px;\">\n      <form [formGroup]=\"studentsaveform\" (ngSubmit)=\"saveStudent()\">\n        <div class=\"form-group\">\n          <label for=\"name\">Student Name</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"student_name\" data-toggle=\"tooltip\"\n            data-placement=\"right\" title=\"Enter Student Name\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"name\">Student Email</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"student_email\" data-toggle=\"tooltip\"\n            data-placement=\"right\" title=\"Enter Student Email\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n      </form>\n    </div>\n  </div>\n  <div class=\"col-sm-4\"></div>\n</div>\n<div class=\"row\">\n  <div class=\"col-sm-4\"></div>\n  <div class=\"col-sm-4\">\n    <div [hidden]=\"!submitted\">\n      <h4>Student Added SuccessFully!</h4>\n      <button class='btn btn-primary'>Add More Student</button>\n    </div>\n  </div>\n  <div class=\"col-sm-4\"></div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { AddStudentComponent } from './add-student/add-student.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'view-student', pathMatch: 'full' },\n  { path: 'view-student', component: StudentListComponent },\n  { path: 'add-student', component: AddStudentComponent },\n  {\n    path: 'student',\n    loadChildren: () => import('./student-list/student-list.module')\n      .then(v => v.StudentListModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\nexport const routingComponents = [\n  StudentListComponent,\n  AddStudentComponent\n]  \n","import { Component, OnInit } from '@angular/core';\nimport { InteractionService } from './core/service/interaction.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'student-data';\n  constructor(private inreractionService: InteractionService) { }\n\n  ngOnInit(): void {\n\n  }\n}\n","<div class=\"container-fluid\">\n  <br/>\n  <div class=\"example-button-row\">\n    <button mat-raised-button color=\"primary\" routerLink=\"view-student\">View Users</button>\n    <button mat-raised-button color=\"accent\" routerLink=\"add-student\">Add New User</button>\n  </div>\n  <hr class=\"new4\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\nimport { SharedModule } from './shared/shared.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { CoreModule } from './core/core.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    NgxSpinnerModule,\n    SharedModule,\n    ModalModule.forRoot(),\n    CoreModule.forRoot(),\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppInterceptorService } from './interceptor'\n\nimport {\n  InteractionService,\n  StudentService,\n  AppLoaderService\n} from './service'\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    InteractionService,\n    StudentService,\n    AppLoaderService,\n    AppInterceptorService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AppInterceptorService,\n      multi: true\n    }\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\n        'CoreModule is already loaded. Import it in the AppModule only');\n    }\n  }\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        InteractionService,\n        StudentService,\n        AppLoaderService,\n        AppInterceptorService\n      ]\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppLoaderService } from '../service/app-loader.service';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpHeaders, HttpResponse, HttpErrorResponse, HttpEventType } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AppInterceptorService {\n\n  private count: number = 0;\n  constructor(public loaderService: AppLoaderService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n    this.loaderService.show();\n    \n    const header = new HttpHeaders({\n      'name' : 'dev'\n    })\n    const clone = req.clone({\n      headers: header\n    })\n\n    return next.handle(clone)\n      .pipe(tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n            this.loaderService.hide()\n          }\n      }),\n      catchError(this.errorHandler))\n   //https://stackoverflow.com/questions/49385369/angular-show-spinner-for-every-http-request-with-very-less-code-changes\n   //https://onthecode.co.uk/angular-display-spinner-every-request/\n    /*return next.handle(clone)\n    .pipe(\n      finalize(()=> {\n        this.count--;\n        if (this.count === 0) {\n          this.loaderService.hide()\n        }\n        \n      }),\n      catchError(this.errorHandler)\n    )*/   \n   // return null;\n  }\n  errorHandler(error: HttpErrorResponse){\n    return throwError(error || 'Server Error')\n  }\n\n}\n","export * from './app-interceptor.service';","export class Student {\n    student_id:number;\n    student_name:String;\n    student_email:String;\n    student_branch:String\n}\n","export class User {\n    id:number;\n    name:String;\n    email:String;\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable()\nexport class AppLoaderService {\n\n  constructor(private spinner: NgxSpinnerService) { }\n\n  isLoading = new Subject<String>();\n\n    show() {\n        this.isLoading.next('Request is Running');\n        this.spinner.show()\n    }\n\n    hide() {\n        this.isLoading.next('Request is Completed');\n        this.spinner.hide()\n    }\n}\n","export * from './interaction.service';\r\nexport * from './student.service';\r\nexport * from './app-loader.service';","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { User } from '../model/user';\n\n@Injectable()\nexport class InteractionService {\n\n  public _user :User;\n  \n  private _studentListSource = new Subject<string>();\n  studentList$ = this._studentListSource.asObservable();\n\n  private _users = new Subject<User>();\n  user$ = this._users.asObservable();\n  constructor() { }\n\n  public get user(): any{\n    return this._user\n  }\n\n  public set user(user : any){\n    this._user = user;\n  }\n  sentMessage(message : string){\n    this._studentListSource.next(message);\n  }\n\n  addUsers(users : User){\n    this._users.next(users)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { Student } from '../model/student';\nimport { catchError, retry, timeout, timeoutWith } from 'rxjs/operators'\nimport { User } from '../model/user';\nimport { Posts } from '../model/posts';\nimport { Comments } from '../model/comments';\n\n@Injectable()\nexport class StudentService {\n\n  private baseUrl = \"http://localhost:8081/api/\";\n\n  private baseUserUrl = \"https://jsonplaceholder.typicode.com/\";\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  getUserList(): Observable<User[]> {\n\n    return this.http.get<User[]>(`${this.baseUserUrl}` + \"users\").pipe(\n      retry(0),\n      timeout(2000),\n      catchError(err => {\n        return this.http.get<User[]>('assets/data/users.json');\n        //return throwError(err.message || 'Server Error');\n      })\n    );\n  }\n\n  getStudentList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}` + \"students-list\").pipe(\n      retry(5),\n      catchError(err => {\n        return throwError(err.message || 'Server Error');\n      })\n    );\n  }\n\n  createStudent(student: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}` + 'save-student', student);\n  }\n\n  deleteStudent(id: number): Observable<Object> {\n    return this.http.delete(`${this.baseUrl}` + 'delete-student/' + `${id}`, { responseType: 'text' });\n  }\n\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(`${this.baseUserUrl}` + 'users/' + `${id}`)\n      .pipe(\n        retry(1),\n        catchError(this.errorHandler)\n      )\n  }\n\n  /*getStudent(id: number): Observable<any> {\n    return this.http.get<Student>(`${this.baseUrl}` + 'student/' + `${id}`)\n      .pipe(\n        retry(1),\n        catchError(this.errorHandler)\n      )\n  }*/\n\n  /*updateStudent(id: number, value: any): Observable<Object> {\n    return this.http.post(`${this.baseUrl}/update-student/${id}`, value);\n  }*/\n\n  updateStudent(id: number, value: User): Observable<Object> {\n    return this.http.post(`${this.baseUserUrl}users/${id}`, value);\n  }\n\n  getAllPostCall(): Observable<any> {\n    return this.http.get('https://jsonplaceholder.typicode.com/todos/1');\n  }\n\n  getAllPost(): Observable<any> {\n    const header = new HttpHeaders({\n      'neme': 'Shubham'\n    })\n\n    const params = new HttpParams().append('id', '2')\n\n    return this.http.get('https://jsonplaceholder.typicode.com/todos/1', { headers: header, params: params })\n      .pipe(\n        retry(2),\n        catchError(this.errorHandler)\n      );\n  }\n\n  getUsers() {\n    //https://jsonplaceholder.typicode.com/users --Replace with JSON as open api is not working sometimes\n    return this.http.get<User>('assets/data/users.json')\n      .toPromise();\n  }\n  //`https://jsonplaceholder.typicode.com/posts?userId=${userId}`\n  getUserPosts(userId) {\n    return this.http.get<Posts>('assets/data/posts.json')\n      .toPromise();\n  }\n  //`https://jsonplaceholder.typicode.com/comments?postId=${postId}`\n  getPostComments(postId) {\n    return this.http.get<Comments>('assets/data/comments.json')\n      .toPromise();\n  }\n\n\n  errorHandler(error: HttpErrorResponse) {\n    return throwError(error || 'Server Error')\n  }\n\n\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n    selector: '',\n    templateUrl: './confirmok.component.html',\n    styleUrls: ['./confirmok.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ConfirmOkComponent {\n    title: string = 'Information';\n    msg: string = '';\n\n    confirmLabel: string = 'OK';\n    confirmCallback: Function;\n\n    constructor(public bsModalRef: BsModalRef) { }\n\n    confirmClick() {\n        if (this.confirmCallback) {\n            this.confirmCallback()\n        }\n    }\n\n}\n","<div class=\"modal-header\" *ngIf=\"title!=''\">\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\n    <button *ngIf=\"false\" type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    {{msg}}\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"confirmClick();bsModalRef.hide()\">{{confirmLabel}}</button>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { ConfirmOkComponent } from '../confirmok.component';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n@Injectable({\n    providedIn: 'root'    \n})\nexport class ModalService {\n\n    constructor(private bsModalService: BsModalService){\n\n    }\n    confirmOK(\n        msg: string,\n        confirmCallback: () => void,\n        title?: string,\n        confirmLabel?: string,\n        cancelLabel?: string) {\n\n        const clsname: string = (title === 'Information') ? 'confirmModal reassign-popup' : 'confirmModal';\n        const modalRef: BsModalRef = this.bsModalService.show(ConfirmOkComponent, { class: clsname, ignoreBackdropClick: true, keyboard: false, animated: false, backdrop: 'static' });\n\n        modalRef.content.title = title || 'Information';\n        modalRef.content.confirmLabel = confirmLabel || 'OK';\n\n        modalRef.content.msg = msg;\n        modalRef.content.confirmCallback = confirmCallback;\n        return modalRef;\n    }\n    \n}","export * from './confirmok.component';","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input()\n  public headerValue: string\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"header\">{{headerValue}}</div>\n<hr class=\"new4\">\n","export * from './header.component'","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfirmOkComponent } from './components/confirmok';\nimport { HeaderComponent } from './components/header';\n\n@NgModule({\n  declarations: [ConfirmOkComponent, HeaderComponent],\n  imports: [\n    CommonModule\n  ],\n  entryComponents:[\n    ConfirmOkComponent\n  ],\n  exports:[\n    ConfirmOkComponent,\n    HeaderComponent\n  ]\n})\nexport class SharedModule {\n\n  // constructor (@Optional() @SkipSelf() parentModule?: SharedModule) {\n  //   if (parentModule) {\n  //     throw new Error(\n  //       'SharedModule is already loaded. Import it in the AppModule only');\n  //   }\n  // }\n  // static forRoot() : ModuleWithProviders{\n  //   return {\n  //     ngModule: SharedModule,\n  //     providers:[ConfirmOkComponent,\n  //               HeaderComponent]\n  //   }\n  // }\n }\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { StudentService } from '../core/service/student.service';\nimport { Student } from '../core/model/student';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { InteractionService } from '../core/service/interaction.service';\nimport { Route } from '@angular/compiler/src/core';\nimport { Router } from '@angular/router';\nimport { User } from '../core/model/user';\nimport { map, isEmpty } from 'rxjs/operators';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ModalService } from '../shared/components/confirmok/data/modal-service';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit, AfterViewInit {\n\n  public studentList: Observable<Student[]>;\n  public userList: any;\n  public deleteMessage: boolean = false;\n  public isupdated: boolean = false;\n  studentlist: any;\n  public user = new User();\n  public addedUser = new User();\n  student: Student = new Student();\n  public isupdatedMess: boolean = true;\n  //public parentData ='I am Sending data from Parent Componet';\n  public parentDataUsingGetterSetter = 'I am Sending data from Parent Componet Using Getter Setter'\n  public errorMsg: string;\n  public isErrorMessage: boolean = false;\n  public headerVal:string = 'User Information';\n  // @ViewChild(StudentListChildComponent) childComponentRef : StudentListChildComponent;\n\n  constructor(private studentservice: StudentService,\n    private inreractionService: InteractionService,\n    private route: Router,\n    private spinner: NgxSpinnerService,\n    private modalService: ModalService) { }\n  ngAfterViewInit(): void {\n    //this.childComponentRef.message ='Message from Parent Component';\n  }\n\n  moveNext(): void {\n    this.route.navigate(['/student/student-details'])\n  }\n  // clickToHello(){\n  //   this.inreractionService.sentMessage('Good Morning Child')\n  // }\n\n  // clickToThanks(){\n  //   this.inreractionService.sentMessage('Thanks Child')\n  // }\n\n\n  // clickToChild(){\n  //   this.childComponentRef.message = 'Message from Parent Component';\n  // }\n  ngOnInit(): void {\n    this.isupdated = false;\n    this.spinner.show();\n    this.inreractionService.user$.subscribe(\n      user => {\n\n        this.addedUser = user;\n        console.log(this.addedUser);\n\n      }\n    )\n    this.studentservice.getUserList()\n      .subscribe(\n        data => {\n          // console.log(this.inreractionService._user);\n          /// if(this.addedUser)\n          //if (isEmpty(this.addedUser))\n          if (this.inreractionService._user) {\n            data.length\n            this.inreractionService._user.id = data.length + 1\n            data.push(this.inreractionService._user);\n            // console.log(data1);\n          }\n          this.userList = data;\n          this.spinner.hide();\n        },\n        error => {\n          this.errorMsg = error;\n          this.isErrorMessage = true;\n        }\n      )\n\n    /*this.studentservice.getStudentList()\n      .subscribe(\n        data => {\n          this.studentList = data;\n        },\n        err => {\n          this.errorMsg = err;\n          this.isErrorMessage = true;\n        }\n      )*/\n  }\n\n  deleteStudent(id: number) {\n\n    this.studentservice.getUserList()\n      .subscribe(\n        data => {\n          this.userList = data.filter(x => x.id != id);\n          this.deleteMessage = true;\n          this.modalService.confirmOK('User Data Deleted', () => { }, \"Success\")\n          //this.userList = data;\n        }\n      )\n\n\n    /* this.studentservice.deleteStudent(id).subscribe(data => {\n       console.log(data)\n       this.studentservice.getStudentList().subscribe(\n         data => {\n           this.deleteMessage = true;\n           console.log(data)\n           this.studentList = data;\n         }\n       )\n     },\n       error => { console.log(error) \n       }\n     )*/\n  }\n\n  updateStudent(id: number) {\n\n    this.studentservice.getUser(id).subscribe(\n      data => {\n        this.isupdated = true;\n        this.user = data\n      },\n      error => console.log(error.message)\n    );\n  }\n\n  studentupdateform = new FormGroup({\n    id: new FormControl(),\n    name: new FormControl(),\n    email: new FormControl()\n  });\n\n  updateStu(updstu: any) {\n    this.user = new User();\n    this.user.id = this.StudentId.value;\n    this.user.name = this.StudentName.value;\n    this.user.email = this.StudentEmail.value;\n    // this.student.student_branch=this.StudentBranch.value;  \n    // console.log(this.StudentBranch.value);\n    this.studentservice.getUserList().subscribe(\n      data => {\n        this.userList = data.map(\n          user => {\n            if (user.id === this.user.id) {\n              user.name = this.user.name;\n              user.email = this.user.email;\n              return user;\n            } else {\n              return user;\n            }\n          }\n        )\n      }, error => console.log(error)\n    );\n\n    /*this.studentservice.updateStudent(this.user.id,this.user).subscribe(  \n     data => {       \n       this.isupdated=true;  \n       this.studentservice.getStudentList().subscribe(data =>{  \n         this.isupdatedMess = false;\n         this.studentList =data  \n         })  \n     },  \n     error => console.log(error)); */\n  }\n\n  /* updateStu(updstu : any){  \n       this.student=new Student();   \n      this.student.student_id=this.StudentId.value;  \n      this.student.student_name=this.StudentName.value;  \n      this.student.student_email=this.StudentEmail.value;  \n     // this.student.student_branch=this.StudentBranch.value;  \n     // console.log(this.StudentBranch.value);  \n      this.studentservice.updateStudent(this.student.student_id,this.student).subscribe(  \n       data => {       \n         this.isupdated=true;  \n         this.studentservice.getStudentList().subscribe(data =>{  \n           this.isupdatedMess = false;\n           this.studentList =data  \n           })  \n       },  \n       error => console.log(error)); \n   }*/\n  get StudentName() {\n    return this.studentupdateform.get('name');\n  }\n\n  get StudentEmail() {\n    return this.studentupdateform.get('email');\n  }\n\n  /*get StudentBranch(){  \n    return this.studentupdateform.get('student_branch');  \n  }  */\n\n  get StudentId() {\n    return this.studentupdateform.get('id');\n  }\n\n  changeisUpdate() {\n    this.isupdated = false;\n  }\n\n  // clickParentMethod(message :string){\n  //   alert('HiHihhi' + message);\n  // }\n\n  hideError(): void {\n    this.isErrorMessage = false;\n  }\n}\n","<div class=\"panel panel-default\">\n  <div [hidden]=\"! isErrorMessage\">\n    <div class=\"alert alert-info alert-dismissible\">\n      <button type=\"button\" class=\"close\" data-dismiss=\"alert\" (click)=\"hideError()\">×</button>\n      <strong>{{errorMsg}}</strong>\n    </div>\n  </div>\n  <div class=\"panel-heading\">\n    <app-header [headerValue] = \"headerVal\"></app-header> \n    <div class=\"row\" [hidden]=\"!deleteMessage\">\n\n      <div class=\"col-sm-4\"></div>\n      <div class=\"col-sm-4\">\n        <div class=\"alert alert-info alert-dismissible\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>\n          <strong>User Data Deleted</strong>\n        </div>\n      </div>\n\n      <div class=\"col-sm-4\"></div>\n    </div>\n\n  </div>\n\n  <div class=\"panel-body\">\n    <table class=\"table table-hover table-sm\" datatable>\n      <thead class=\"thead-light\">\n        <tr>\n          <th>User Id</th>\n          <th>User Name</th>\n          <th>User Email</th>\n          <th>Action</th>\n\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let student of userList\">\n          <td>{{student.id}}</td>\n          <td>{{student.name}}</td>\n          <td>{{student.email}}</td>\n          <td><button (click)=\"deleteStudent(student.id)\" class='btn btn-primary'><i\n                class=\"fa fa-futboll-0\">Delete</i></button>\n            <button (click)=\"updateStudent(student.id)\" class='btn btn-info' data-toggle=\"modal\"\n              data-target=\"#myModal\">Update</button>\n          </td>\n        </tr>\n      </tbody><br>\n    </table>\n  </div>\n</div>\n<div id=\"myModal\" [hidden]=\"!isupdated\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <form [formGroup]=\"studentupdateform\" #updstu (ngSubmit)=\"updateStu(updstu)\">\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\" style=\"text-align: center\">Update Student</h4>\n\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body\">\n          <div>\n            <div class=\"form-group\">\n              <label for=\"name\">Student Name</label>\n              <input class=\"form-control\" formControlName=\"id\" [(ngModel)]=\"user.id\">\n            </div>\n\n\n            <div class=\"form-group\">\n              <label for=\"name\">Student Name</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"name\" [(ngModel)]=\"user.name\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"name\">Student Email</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"email\" [(ngModel)]=\"user.email\">\n            </div>\n          </div>\n          <div [hidden]=\"isupdatedMess\">\n            <h4>Student Detail Updated!</h4>\n          </div>\n\n        </div>\n\n        <!-- Modal footer -->\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-success\" [hidden]=\"!isupdated\">Update</button>\n          <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"changeisUpdate()\">Close</button>\n        </div>\n\n      </form>\n    </div>\n  </div>\n</div>\n<div style=\"align-items: center;\">\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"moveNext()\">Next</button>\n</div>\n<ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">  \n  <p style=\"color: white\">Please Wait. </p>  \n  </ngx-spinner> ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}