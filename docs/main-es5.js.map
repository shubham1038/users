{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-student/add-student.component.ts","webpack:///src/app/add-student/add-student.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/interceptor/app-interceptor.service.ts","webpack:///src/app/interceptor/app-loader.service.ts","webpack:///src/app/model/student.ts","webpack:///src/app/model/user.ts","webpack:///src/app/service/interaction.service.ts","webpack:///src/app/service/student.service.ts","webpack:///src/app/student-list/student-list.component.ts","webpack:///src/app/student-list/student-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddStudentComponent","studentService","interactionService","student","submitted","newUser","studentsaveform","student_name","required","minLength","student_email","email","name","StudentName","value","StudentEmail","_user","addUsers","save","createStudent","subscribe","data","console","log","error","get","saveStudent","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","loadChildren","v","StudentListModule","AppRoutingModule","forRoot","imports","routingComponents","AppComponent","inreractionService","title","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AppInterceptorService","loaderService","count","next","show","header","clone","headers","handle","pipe","event","hide","errorHandler","providedIn","AppLoaderService","isLoading","Student","User","InteractionService","_studentListSource","studentList$","asObservable","_users","user$","message","users","user","StudentService","http","baseUrl","baseUserUrl","err","post","responseType","params","append","toPromise","userId","postId","StudentListComponent","studentservice","route","deleteMessage","isupdated","addedUser","isupdatedMess","parentDataUsingGetterSetter","isErrorMessage","studentupdateform","navigate","getUserList","length","push","userList","errorMsg","filter","x","getUser","updstu","StudentId","map","hideError","updateStu","changeisUpdate","moveNext","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from '../service/student.service';\nimport { Student } from '../model/student';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { User } from '../model/user';\nimport { InteractionService } from '../service/interaction.service';\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css']\n})\nexport class AddStudentComponent implements OnInit {\n\n  constructor(private studentService : StudentService,\n              private interactionService : InteractionService) { \n\n    }\n\n  student :User = new User();\n  public submitted: boolean= false;\n  newUser = new User();\n\n  ngOnInit(): void {\n    this.submitted =false;\n  }\n\n  studentsaveform=new FormGroup({  \n    student_name:new FormControl('' , [Validators.required , Validators.minLength(5) ] ),  \n    student_email:new FormControl('',[Validators.required,Validators.email]),  \n    //student_branch:new FormControl()  \n  }); \n\n  saveStudent(){\n    this.student =new User();\n    this.student.name = this.StudentName.value;\n    this.student.email = this.StudentEmail.value;\n   // this.student.student_branch = this.StudentBranch.value;\n    this.submitted = true;\n    this.interactionService._user = this.student;\n\n\n    this.interactionService.addUsers(this.student)\n    this.save();\n  }\n\n  save(){\n    this.studentService.createStudent(this.student).subscribe(\n      data => console.log(data),\n      error => console.log(error)\n      );\n      this.student = new User();\n  }\n\n  get StudentName(){  \n    return this.studentsaveform.get('student_name');  \n  }  \n  \n  get StudentEmail(){  \n    return this.studentsaveform.get('student_email');  \n  }  \n  \n /* get StudentBranch(){  \n    return this.studentsaveform.get('student_branch');  \n  }*/\n}\n","<h3>Create Student</h3>  \n<div class=\"row\">  \n  <div class=\"col-sm-4\"></div>  \n  <div class=\"col-sm-4\" >  \n    <div [hidden] =\"submitted\" style=\"width: 400px;\">  \n      <form [formGroup]=\"studentsaveform\"   (ngSubmit) =\"saveStudent()\">  \n          <div class=\"form-group\">  \n              <label for=\"name\">Student Name</label>  \n              <input type=\"text\" class=\"form-control\"  formControlName=\"student_name\" data-toggle=\"tooltip\"   \n                 data-placement=\"right\" title=\"Enter Student Name\" >  \n              <div class=\"alert alert-danger\"   \n                style=\"margin-top: 5px;\">  \n                  <span >Student Name is Required</span>  \n                    <span>   \n                        MinLength Error   \n                    </span>                     \n                </div>  \n          </div>  \n    \n          <div class=\"form-group\">  \n              <label for=\"name\">Student Email</label>  \n              <input type=\"text\" class=\"form-control\" formControlName=\"student_email\"   \n                data-toggle=\"tooltip\" data-placement=\"right\" title=\"Enter Student Email\">  \n                <div class=\"alert alert-danger\"   \n                style=\"margin-top: 5px;\">  \n                  <span >Student Email is Required</span>  \n                    <span >   \n                        Invalid Email Format   \n                    </span>                     \n                </div>  \n          </div>  \n    \n         <!--<div class=\"form-group\">  \n              <label for=\"branch\">Student Branch</label>  \n                <select class=\"form-control\" formControlName=\"student_branch\" data-toggle=\"tooltip\"   \n                      data-placement=\"right\" title=\"Select Student Branch\">  \n                    <option value=\"null\">--Select Branch--</option>  \n                  <option value=\"B-Tech\">B-Tech</option>  \n                  <option value=\"BCA\">BCA</option>  \n                  <option value=\"MCA\">MCA</option>  \n                  <option value=\"M-Tech\">M-Tech</option>  \n                </select>  \n          </div>  -->\n    \n          <button type=\"submit\" class=\"btn btn-success\">Submit</button>  \n      </form>  \n  </div>  \n  </div>  \n  <div class=\"col-sm-4\"></div>  \n</div>  \n<div class=\"row\">  \n  <div class=\"col-sm-4\"></div>  \n  <div class=\"col-sm-4\">  \n      <div [hidden] =\"!submitted\">  \n         <h4>Student Added SuccessFully!</h4>  \n         <button class='btn btn-primary'>Add More Student</button>  \n      </div>        \n  </div>  \n  <div class=\"col-sm-4\"></div>  \n</div> \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { AddStudentComponent } from './add-student/add-student.component';\n\n\nconst routes: Routes = [\n  {path:'' , redirectTo:'view-student', pathMatch:'full'},\n  {path:'view-student', component: StudentListComponent  },\n  {path:'add-student', component: AddStudentComponent},\n  {\n    path: 'student',\n    loadChildren : () => import('./student-list/student-list.module')\n                    .then(v => v.StudentListModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\nexport const routingComponents =[\n  StudentListComponent,\n  AddStudentComponent\n]  \n","import { Component, OnInit } from '@angular/core';\nimport { InteractionService } from './service/interaction.service';\n \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'student-data';\n // respMessage :string;\n  constructor(private inreractionService : InteractionService){}\n\n  ngOnInit(): void {\n    // this.inreractionService.studentList$.subscribe(\n    //   message => this.respMessage = message\n    // )\n  }\n\n  // clickToHello(){\n  //   this.inreractionService.sentMessage('Good Morning Child')\n  // }\n\n  // clickToThanks(){\n  //   this.inreractionService.sentMessage('Thanks Child')\n  // }\n}\n ","<div class=\"container-fluid\">\n  <br/>\n  <div class=\"example-button-row\">\n    <button mat-raised-button color=\"primary\" routerLink=\"view-student\">View Users</button>\n    <button mat-raised-button color=\"accent\" routerLink=\"add-student\">Add New User</button>\n  </div>\n  <hr class=\"new4\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http'\n\nimport { AppInterceptorService } from './interceptor/app-interceptor.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AppInterceptorService,\n      multi:true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { AppLoaderService } from './app-loader.service';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpHeaders, HttpResponse, HttpErrorResponse, HttpEventType } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppInterceptorService {\n\n  private count: number = 0;\n  constructor(public loaderService: AppLoaderService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n    this.count++;\n    if(this.count ==1){\n      this.loaderService.show();\n    }\n    \n    const header = new HttpHeaders({\n      'name' : 'dev'\n    })\n    const clone = req.clone({\n      headers: header\n    })\n\n    return next.handle(clone)\n      .pipe(tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          this.count--;\n          if (this.count == 0) {\n            this.loaderService.hide()\n          }\n        }\n      }),\n      catchError(this.errorHandler))\n   //https://stackoverflow.com/questions/49385369/angular-show-spinner-for-every-http-request-with-very-less-code-changes\n   //https://onthecode.co.uk/angular-display-spinner-every-request/\n    /*return next.handle(clone)\n    .pipe(\n      finalize(()=> {\n        this.count--;\n        if (this.count === 0) {\n          this.loaderService.hide()\n        }\n        \n      }),\n      catchError(this.errorHandler)\n    )*/   \n   // return null;\n  }\n  errorHandler(error: HttpErrorResponse){\n    return throwError(error || 'Server Error')\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppLoaderService {\n\n  constructor() { }\n\n  isLoading = new Subject<String>();\n\n    show() {\n        this.isLoading.next('Request is Running');\n    }\n\n    hide() {\n        this.isLoading.next('Request is Completed');\n    }\n}\n","export class Student {\n    student_id:number;\n    student_name:String;\n    student_email:String;\n    student_branch:String\n}\n","export class User {\n    id:number;\n    name:String;\n    email:String;\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { User } from '../model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InteractionService {\n\n  public _user :User;\n  \n  private _studentListSource = new Subject<string>();\n  studentList$ = this._studentListSource.asObservable();\n\n  private _users = new Subject<User>();\n  user$ = this._users.asObservable();\n  constructor() { }\n\n  public get user(): any{\n    return this._user\n  }\n\n  public set user(user : any){\n    this._user = user;\n  }\n  sentMessage(message : string){\n    this._studentListSource.next(message);\n  }\n\n  addUsers(users : User){\n    this._users.next(users)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Student } from '../model/student';\nimport { catchError, retry } from 'rxjs/operators'\nimport { User } from '../model/user';\nimport { Posts } from '../model/posts';\nimport { Comments } from '../model/comments';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  private baseUrl = \"http://localhost:8081/api/\";\n\n  private baseUserUrl = \"https://jsonplaceholder.typicode.com/\";\n  constructor(private http: HttpClient) {\n\n  }\n\n  getUserList(): Observable<User[]> {\n    return this.http.get<User[]>(`${this.baseUserUrl}` + \"users\").pipe(\n      retry(5),\n      catchError(err => {\n        return throwError(err.message || 'Server Error');\n      })\n    );\n  }\n\n  getStudentList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}` + \"students-list\").pipe(\n      retry(5),\n      catchError(err => {\n        return throwError(err.message || 'Server Error');\n      })\n    );\n  }\n\n  createStudent(student: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}` + 'save-student', student);\n  }\n\n  deleteStudent(id: number): Observable<Object> {\n    return this.http.delete(`${this.baseUrl}` + 'delete-student/' + `${id}`, { responseType: 'text' });\n  }\n\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(`${this.baseUserUrl}` + 'users/' + `${id}`)\n      .pipe(\n        retry(1),\n        catchError(this.errorHandler)\n      )\n  }\n\n  /*getStudent(id: number): Observable<any> {\n    return this.http.get<Student>(`${this.baseUrl}` + 'student/' + `${id}`)\n      .pipe(\n        retry(1),\n        catchError(this.errorHandler)\n      )\n  }*/\n\n  /*updateStudent(id: number, value: any): Observable<Object> {\n    return this.http.post(`${this.baseUrl}/update-student/${id}`, value);\n  }*/\n\n  updateStudent(id: number, value: User): Observable<Object> {\n    return this.http.post(`${this.baseUserUrl}users/${id}`, value);\n  }\n  \n  getAllPostCall(): Observable<any> {\n    return this.http.get('https://jsonplaceholder.typicode.com/todos/1');\n  }\n\n  getAllPost(): Observable<any> {\n    const header = new HttpHeaders({\n      'neme': 'Shubham'\n    })\n\n    const params = new HttpParams().append('id', '2')\n\n    return this.http.get('https://jsonplaceholder.typicode.com/todos/1', { headers: header, params: params })\n      .pipe(\n        retry(2),\n        catchError(this.errorHandler)\n      );\n  }\n\n  getUsers() {\n    return this.http.get<User>('https://jsonplaceholder.typicode.com/users')\n      .toPromise();\n  }\n\n  getUserPosts(userId) {\n    return this.http.get<Posts>(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`)\n      .toPromise();\n  }\n\n  getPostComments(postId) {\n    return this.http.get<Comments>(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`)\n      .toPromise();\n  }\n\n\n  errorHandler(error: HttpErrorResponse) {\n    return throwError(error || 'Server Error')\n  }\n\n\n}\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { StudentService } from '../service/student.service';\nimport { Student } from '../model/student';\nimport { error } from 'protractor';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { InteractionService } from '../service/interaction.service';\nimport { Route } from '@angular/compiler/src/core';\nimport { Router } from '@angular/router';\nimport { User } from '../model/user';\nimport { map, isEmpty } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit ,AfterViewInit {\n\n  public studentList: Observable<Student[]>;\n  public userList: any;\n  public deleteMessage :boolean = false;\n  public isupdated :boolean = false;\n  studentlist:any;\n  public user = new User();\n  public addedUser = new User();\n  student :Student = new Student();\n  public isupdatedMess:boolean =true;\n  //public parentData ='I am Sending data from Parent Componet';\n  public parentDataUsingGetterSetter ='I am Sending data from Parent Componet Using Getter Setter'\n  public errorMsg :string;\n  public isErrorMessage: boolean =false;\n // @ViewChild(StudentListChildComponent) childComponentRef : StudentListChildComponent;\n\n  constructor(private studentservice: StudentService,\n            private inreractionService: InteractionService,\n            private route: Router) { }\n  ngAfterViewInit(): void {\n    //this.childComponentRef.message ='Message from Parent Component';\n  }\n\n  moveNext() :void{\n    this.route.navigate(['/student/student-details'])\n  }\n  // clickToHello(){\n  //   this.inreractionService.sentMessage('Good Morning Child')\n  // }\n\n  // clickToThanks(){\n  //   this.inreractionService.sentMessage('Thanks Child')\n  // }\n\n  \n  // clickToChild(){\n  //   this.childComponentRef.message = 'Message from Parent Component';\n  // }\n  ngOnInit(): void {\n    this.isupdated = false;\n    this.inreractionService.user$.subscribe(\n      user => {\n        this.addedUser = user;\n        console.log(this.addedUser);\n        \n      }\n    )\n    this.studentservice.getUserList()\n    .subscribe(\n      data => {\n       // console.log(this.inreractionService._user);\n       /// if(this.addedUser)\n        //if (isEmpty(this.addedUser))\n        if ( this.inreractionService._user){\n          data.length\n          this.inreractionService._user.id = data.length + 1\n         data.push(this.inreractionService._user);\n        // console.log(data1);\n        }\n        this.userList = data;\n      },\n      error => {\n        this.errorMsg = error;\n        this.isErrorMessage = true;\n      }\n    )\n    \n    /*this.studentservice.getStudentList()\n      .subscribe(\n        data => {\n          this.studentList = data;\n        },\n        err => {\n          this.errorMsg = err;\n          this.isErrorMessage = true;\n        }\n      )*/\n  }\n\n  deleteStudent(id: number) {\n    \n  this.studentservice.getUserList()\n  .subscribe(\n    data => {\n      this.userList = data.filter( x=> x.id != id);\n      this.deleteMessage = true;\n      console.log(data)\n      //this.userList = data;\n    }\n  )\n    \n\n   /* this.studentservice.deleteStudent(id).subscribe(data => {\n      console.log(data)\n      this.studentservice.getStudentList().subscribe(\n        data => {\n          this.deleteMessage = true;\n          console.log(data)\n          this.studentList = data;\n        }\n      )\n    },\n      error => { console.log(error) \n      }\n    )*/\n  }\n\n  updateStudent(id: number) {\n\n    this.studentservice.getUser(id).subscribe(\n      data => {\n        this.isupdated=true;  \n        this.user = data\n      },\n      error => console.log(error.message)\n    );\n  }\n\n  studentupdateform=new FormGroup({  \n    id:new FormControl(),  \n    name:new FormControl(),  \n    email:new FormControl()\n  });  \n  \nupdateStu(updstu : any){  \n    this.user=new User();   \n   this.user.id=this.StudentId.value;  \n   this.user.name=this.StudentName.value;  \n   this.user.email=this.StudentEmail.value;  \n  // this.student.student_branch=this.StudentBranch.value;  \n  // console.log(this.StudentBranch.value);\n  this.studentservice.getUserList().subscribe(\n    data =>{\n     this.userList= data.map(\n        user => {\n          if(user.id === this.user.id){\n            user.name = this.user.name;\n            user.email = this.user.email;\n            return user;\n          }else{\n            return user;\n          }\n        }\n      )\n    },error => console.log(error)\n  ); \n  \n   /*this.studentservice.updateStudent(this.user.id,this.user).subscribe(  \n    data => {       \n      this.isupdated=true;  \n      this.studentservice.getStudentList().subscribe(data =>{  \n        this.isupdatedMess = false;\n        this.studentList =data  \n        })  \n    },  \n    error => console.log(error)); */\n}\n\n /* updateStu(updstu : any){  \n      this.student=new Student();   \n     this.student.student_id=this.StudentId.value;  \n     this.student.student_name=this.StudentName.value;  \n     this.student.student_email=this.StudentEmail.value;  \n    // this.student.student_branch=this.StudentBranch.value;  \n    // console.log(this.StudentBranch.value);  \n     this.studentservice.updateStudent(this.student.student_id,this.student).subscribe(  \n      data => {       \n        this.isupdated=true;  \n        this.studentservice.getStudentList().subscribe(data =>{  \n          this.isupdatedMess = false;\n          this.studentList =data  \n          })  \n      },  \n      error => console.log(error)); \n  }*/\n  get StudentName(){  \n    return this.studentupdateform.get('name');  \n  }  \n  \n  get StudentEmail(){  \n    return this.studentupdateform.get('email');  \n  }  \n  \n  /*get StudentBranch(){  \n    return this.studentupdateform.get('student_branch');  \n  }  */\n  \n  get StudentId(){  \n    return this.studentupdateform.get('id');  \n  }  \n\n  changeisUpdate(){\n    this.isupdated = false;\n  }\n\n  // clickParentMethod(message :string){\n  //   alert('HiHihhi' + message);\n  // }\n\n  hideError(): void {\n    this.isErrorMessage = false;\n  }\n}\n","<div class=\"panel panel-default\">\n  <div [hidden]=\"! isErrorMessage\">\n    <div class=\"alert alert-info alert-dismissible\">\n      <button type=\"button\" class=\"close\" data-dismiss=\"alert\" (click)=\"hideError()\">×</button>\n      <strong>{{errorMsg}}</strong>\n    </div>\n  </div>\n  <div class=\"panel-heading\">\n    <h1 style=\"text-align: center\">User Information</h1><br>\n    <div class=\"row\" [hidden]=\"!deleteMessage\">\n\n      <div class=\"col-sm-4\"></div>\n      <div class=\"col-sm-4\">\n        <div class=\"alert alert-info alert-dismissible\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>\n          <strong>User Data Deleted</strong>\n        </div>\n      </div>\n\n      <div class=\"col-sm-4\"></div>\n    </div>\n\n  </div>\n\n  <div class=\"panel-body\">\n    <table class=\"table table-hover table-sm\" datatable>\n      <thead class=\"thead-light\">\n        <tr>\n          <th>User Id</th>\n          <th>User Name</th>\n          <th>User Email</th>\n          <th>Action</th>\n\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let student of userList\">\n          <td>{{student.id}}</td>\n          <td>{{student.name}}</td>\n          <td>{{student.email}}</td>\n          <td><button (click)=\"deleteStudent(student.id)\" class='btn btn-primary'><i\n                class=\"fa fa-futboll-0\">Delete</i></button>\n            <button (click)=\"updateStudent(student.id)\" class='btn btn-info' data-toggle=\"modal\"\n              data-target=\"#myModal\">Update</button>\n          </td>\n        </tr>\n      </tbody><br>\n    </table>\n  </div>\n</div>\n<div id=\"myModal\" [hidden]=\"!isupdated\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <form [formGroup]=\"studentupdateform\" #updstu (ngSubmit)=\"updateStu(updstu)\">\n        <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\" style=\"text-align: center\">Update Student</h4>\n\n        </div>\n\n        <!-- Modal body -->\n        <div class=\"modal-body\">\n          <div>\n            <div class=\"form-group\">\n              <label for=\"name\">Student Name</label>\n              <input class=\"form-control\" formControlName=\"id\" [(ngModel)]=\"user.id\">\n            </div>\n\n\n            <div class=\"form-group\">\n              <label for=\"name\">Student Name</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"name\" [(ngModel)]=\"user.name\">\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"name\">Student Email</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"email\" [(ngModel)]=\"user.email\">\n            </div>\n          </div>\n          <div [hidden]=\"isupdatedMess\">\n            <h4>Student Detail Updated!</h4>\n          </div>\n\n        </div>\n\n        <!-- Modal footer -->\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-success\" [hidden]=\"!isupdated\">Update</button>\n          <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"changeisUpdate()\">Close</button>\n        </div>\n\n      </form>\n    </div>\n  </div>\n</div>\n<div style=\"align-items: center;\">\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"moveNext()\">Next</button>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}